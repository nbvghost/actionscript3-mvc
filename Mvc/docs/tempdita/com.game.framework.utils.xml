<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.game.framework.utils"><apiName>com.game.framework.utils</apiName><apiDetail/><apiClassifier id="com.game.framework.utils:RPCUID"><apiName>RPCUID</apiName><shortdesc>
	  The RPCUIDUtil class is a copy of UIDUtil without some functions that
	  cause dependency problems when RPC messages are put in a bootstrap loader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  The RPCUIDUtil class is a copy of UIDUtil without some functions that
	  cause dependency problems when RPC messages are put in a bootstrap loader.
	  
	  </apiDesc></apiClassifierDetail><apiOperation id="com.game.framework.utils:RPCUID:createUID"><apiName>createUID</apiName><shortdesc>
		  Generates a UID (unique identifier) based on ActionScript's
		  pseudo-random number generator and the current time.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The newly-generated UID.
		  
		  </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		  Generates a UID (unique identifier) based on ActionScript's
		  pseudo-random number generator and the current time.
		 
		  <p>The UID has the form
		  <codeph>"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"</codeph>
		  where X is a hexadecimal digit (0-9, A-F).</p>
		 
		  <p>This UID will not be truly globally unique; but it is the best
		  we can do without player support for UID generation.</p>
		 
		  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.game.framework.utils:RPCUID:fromByteArray"><apiName>fromByteArray</apiName><shortdesc>
		 Converts a 128-bit UID encoded as a ByteArray to a String representation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>String representation of the UID, or null if an invalid
		 ByteArray is provided.
		  
		  </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>ba</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>ByteArray 16 bytes in length representing a 128-bit UID.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Converts a 128-bit UID encoded as a ByteArray to a String representation.
		 The format matches that generated by createUID. If a suitable ByteArray
		 is not provided, null is returned.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.game.framework.utils:RPCUID:isUID"><apiName>isUID</apiName><shortdesc>
		 A utility method to check whether a String value represents a 
		 correctly formatted UID value.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Returns true if the value is formatted as a UID.
		  
		  </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>The value to test whether it is formatted as a UID.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 A utility method to check whether a String value represents a 
		 correctly formatted UID value. UID values are expected to be 
		 in the format generated by createUID(), implying that only
		 capitalized A-F characters in addition to 0-9 digits are
		 supported.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.game.framework.utils:RPCUID:toByteArray"><apiName>toByteArray</apiName><shortdesc>
		 Converts a UID formatted String to a ByteArray.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>ByteArray 16 bytes in length representing the 128-bits of the
		 UID or null if the uid could not be converted.
		  
		  </apiDesc><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>representing a 128-bit UID
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Converts a UID formatted String to a ByteArray. The UID must be in the
		 format generated by createUID, otherwise null is returned.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="com.game.framework.utils:InteractiveUtils"><apiName>InteractiveUtils</apiName><shortdesc>
	 
	 author sixf
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 author sixf
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.game.framework.utils:InteractiveUtils:InteractiveUtils"><apiName>InteractiveUtils</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage>